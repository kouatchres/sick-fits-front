{"version":3,"file":"static/webpack/static\\development\\pages\\sell.js.c8e48cc405a6986304f9.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport {Mutation} from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport Form from './styles/Form';\r\nimport Router from  'next/router';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport ErrorMessages from './ErrorMessage'\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst CREATE_ITEM_MUTATION = gql `\r\nmutation CREATE_ITEM_MUTATION(\r\n        $title: String!\r\n        $description: String!\r\n        $price: Int!\r\n        $image: String\r\n        $largeImage: String\r\n\r\n) {\r\n    createItem(\r\n        title: $title\r\n        description: $description\r\n        price: $price\r\n        image: $image\r\n        largeImage: $largeImage\r\n        # user: $user\r\n\r\n    ){\r\n        id\r\n        description\r\n        price\r\n    }\r\n\r\n\r\n}\r\n`;\r\nconst PageView = styled.div `\r\ndisplay:grid;\r\ngrid-template-columns: repeat(auto-fit,minmax(200px,1fr));\r\ntext-align: center;\r\ngrid-gap:10px;\r\njustify-items:stretch;\r\n`;\r\n  const ButtonDisplay = styled.button `\r\n  /* grid-template-columns:-1; */\r\n  height:40px;\r\n  align-items: stretch;\r\n  align-self:center;\r\n  `;\r\n\r\nconst InputDisplay = styled.input `\r\nheight:40px;\r\nalign-self:center;\r\n`;\r\n\r\nconst TextAreaDisplay = styled.textarea `\r\nheight:40px;\r\nalign-self:center;\r\n`;\r\n\r\n\r\nclass CreateItem extends Component {\r\n    state = {\r\n        title: \"\",\r\n        description: \"\",\r\n        image: \"\",\r\n        largeImage: \"\",\r\n        price: 0,\r\n        user: \"\"\r\n    };\r\n    handleChange = (e) => {\r\n        const {name, type, value} = e.target\r\n        // if any of the input is a number parse them before anything else\r\n        const val = type === 'number'? parseFloat(value): value;\r\n        this.setState({[name]: val})\r\n    };\r\n    //uploading images\r\n    uploadFile = async e =>{\r\n        console.log('uploading file...');\r\n        //pull file from the list of files\r\n        const files = e.target.files;\r\n        const data= new FormData();\r\n        data.append('file',files[0]);\r\n        data.append('upload_preset','inexezy');\r\n//hit cloudinary api\r\n const  response = await fetch('https://api.cloudinary.com/v1_1/inex/image/upload',\r\n {\r\n     method:'POST',\r\n     body:data,\r\n });\r\n const file = await response.json();\r\n    console.log(file);\r\nthis.setState({\r\n    image: file.secure_url,\r\n    largeImage: file.eager[0].secure_url,\r\n});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Mutation mutation={CREATE_ITEM_MUTATION}\r\n             variables={this.state}\r\n             >\r\n                {(createItem, {loading, error}) => (\r\n                    <Form  disabled={loading} onSubmit={ async e =>{\r\n                        e.preventDefault();\r\n                        const res= await createItem();\r\n                        // go to the single item page\r\n                        console.log(res);\r\n                        Router.push({\r\n                            pathname: '/item',\r\n                            query:{id: res.data.createItem.id}\r\n                        })\r\n // if there is an error this component will show up if not then nothing willbe seen\r\n                         }}>\r\n                        <ErrorMessages error={error}/>\r\n                        <fieldset  disabled={loading} aria-busy={loading}>\r\n                           <PageView>\r\n                           <label htmlFor=\"file\">Image\r\n                                <InputDisplay\r\n                                    type=\"file\"\r\n                                    name=\"file\"\r\n                                    id=\"file\"\r\n                                    placeholder=\"Upload an image\"\r\n                                    required\r\n                                    onChange={this.uploadFile}/>\r\n                            </label>\r\n\r\n                            <label htmlFor=\"title\">Title\r\n                                <InputDisplay\r\n                                    type=\"text\" \r\n                                    name=\"title\"\r\n                                    id=\"title\"\r\n                                    placeholder=\"Title\"\r\n                                    required\r\n                                    value={this.state.title}\r\n                                    onChange={this.handleChange}/>\r\n                            </label>\r\n                            <label htmlFor=\"price\">Price\r\n                                <InputDisplay\r\n                                    type=\"number\"\r\n                                    name=\"price\"\r\n                                    id=\"price\"\r\n                                    placeholder=\"Price\"\r\n                                    required\r\n                                    value={this.state.price}\r\n                                    onChange={this.handleChange}/>\r\n                            </label>\r\n\r\n                            <label htmlFor=\"description\">Description\r\n                                <TextAreaDisplay\r\n                                    name=\"description\"\r\n                                    id=\"description\"\r\n                                    placeholder=\"Description\"\r\n                                    required\r\n                                    value={this.state.description}\r\n                                    onChange={this.handleChange}/>\r\n                            </label>\r\n\r\n   <ButtonDisplay disabled={loading} type=\"submit\">Sav{loading ? 'ing' : 'e'}</ButtonDisplay>\r\n                           </PageView>\r\n                        </fieldset>\r\n                    </Form>\r\n                )}\r\n            </Mutation >\r\n\r\n        );\r\n    }\r\n}\r\nexport default CreateItem;\r\nexport {CREATE_ITEM_MUTATION};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AA0BA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAUA;AACA;AAFA;AACA;AAVA;AAQA;AARA;AAAA;AACA;AADA;AAaA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAoBA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxDA;AAgEA;;;;AA1GA;AACA;AA2GA;;;;;A","sourceRoot":""}